@model BloodBank_PBD.Models.User

@{
    ViewBag.Title = "Sign Up";
}

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<div class="container-fluid d-flex justify-content-center pt-5">
    <div class="card login-card">
        <div class="card-title text-center">
            <span class="login-title">sign up</span>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("CreateUser", "User"))
            {
                <div class="form-group">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control new-user-txt", placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control new-user-txt", placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Age, new { @class = "form-control new-user-txt", placeholder = "Age", type = "number" })
                    @Html.ValidationMessageFor(m => m.Age, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control new-user-txt", placeholder = "Address" })
                    @Html.ValidationMessageFor(m => m.Location, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.DropDownListFor(m => m.BloodType, ViewBag.BloodTypes as SelectList, "Blood Type", new { @class = "form-control new-user-txt" })
                    @Html.ValidationMessageFor(m => m.BloodType, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control new-user-txt", placeholder = "Username" })
                    @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "text-danger" })
                    <span class="text-danger">@ViewBag.UserExistError</span>
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control new-user-txt", placeholder = "Password", type = "password" })
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.TextBox("confirm-password", null, new { @class = "form-control new-user-txt", placeholder = "Confirm Password", type = "password" })
                    <span class="text-danger password-mismatch-error" id="password-mismatch-error">Password doesn't match</span>
                </div>
                <div class="login-btn mt-5"><input type="submit" value="sign up" id="signup-btn"></div>
            }
            <div class="new-user">
                Already a member?
                @Html.ActionLink("log in", "Login", null, new { @class = "signup-link" })
            </div>
        </div>
    </div>
</div>
